@model IEnumerable<PerfectedCheck.Models.NoteModel>
@using PerfectedCheck.Services
@inject LoggedUserService loggedUserService
@{
}

<div class="card">
	<div class="card-body">
		<div class="list-group list-group-flush">
			<nav class="nav nav-pills">
				<h3 class="flex-fill">My notes</h3>
				@if (loggedUserService.IsLoggedIn)
				{
					<a class="nav-link active" asp-controller="Note" asp-action="Create" >New Note</a>
				}
			</nav>
		</div>
	</div>
</div>
<div class="container-lg">
	<div class="card mt-2">
		<div class="card-body">
			<div class="row justify-content-between">
				@if (loggedUserService.IsLoggedIn)
				{
					@foreach(var note in Model)
					{
						<div class="card col-2 m-1 p-0" style="width: 15rem">
							<ul class="list-group list-group-flush">
								<li class="list-group-item" style="background-color: #dbc597">@note.Title</li>
							</ul>
							<div class="card-body" style="background-color: #f2f2e3">
								@* <p class="list-group-item text-body-secondary">@note.Owner.Username</p> *@
								<p class="card-text">@note.Content.Substring(0, Math.Min(note.Content.Length, 100))</p>
							</div>

							<div class="card-footer">
								<a asp-controller="Note" asp-action="ViewNote" asp-route-id="@note.Id" class="btn btn-primary align-baseline">View Note</a>
								<br />
								<i>@note.CreatedTime.ToLongDateString() @note.CreatedTime.ToShortTimeString()</i>
							</div>
						</div>
					}
					@if(Model.Count() == 0)
					{
						<p class="text-center">You have no notes! Start by pressing "New note"</p>
					}
				} else
				{
					<p class="text-center">You must log in/sign up to create notes</p>
				}
			</div>

		</div>
	</div>
</div>
